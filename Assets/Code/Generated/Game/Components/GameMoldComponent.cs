//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Grabbing.MoldComponent mold { get { return (Code.Gameplay.Grabbing.MoldComponent)GetComponent(GameComponentsLookup.Mold); } }
    public bool hasMold { get { return HasComponent(GameComponentsLookup.Mold); } }

    public void AddMold(Code.Gameplay.Produce.MoldEnum newValue) {
        var index = GameComponentsLookup.Mold;
        var component = (Code.Gameplay.Grabbing.MoldComponent)CreateComponent(index, typeof(Code.Gameplay.Grabbing.MoldComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceMold(Code.Gameplay.Produce.MoldEnum newValue) {
        var index = GameComponentsLookup.Mold;
        var component = (Code.Gameplay.Grabbing.MoldComponent)CreateComponent(index, typeof(Code.Gameplay.Grabbing.MoldComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveMold() {
        RemoveComponent(GameComponentsLookup.Mold);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMold;

    public static Entitas.IMatcher<GameEntity> Mold {
        get {
            if (_matcherMold == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Mold);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMold = matcher;
            }

            return _matcherMold;
        }
    }
}
