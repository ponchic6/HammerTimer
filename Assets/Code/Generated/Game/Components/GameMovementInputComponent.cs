//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Common.MovementInputComponent movementInput { get { return (Code.Gameplay.Common.MovementInputComponent)GetComponent(GameComponentsLookup.MovementInput); } }
    public bool hasMovementInput { get { return HasComponent(GameComponentsLookup.MovementInput); } }

    public void AddMovementInput(UnityEngine.Vector2 newDirection) {
        var index = GameComponentsLookup.MovementInput;
        var component = (Code.Gameplay.Common.MovementInputComponent)CreateComponent(index, typeof(Code.Gameplay.Common.MovementInputComponent));
        component.direction = newDirection;
        AddComponent(index, component);
    }

    public void ReplaceMovementInput(UnityEngine.Vector2 newDirection) {
        var index = GameComponentsLookup.MovementInput;
        var component = (Code.Gameplay.Common.MovementInputComponent)CreateComponent(index, typeof(Code.Gameplay.Common.MovementInputComponent));
        component.direction = newDirection;
        ReplaceComponent(index, component);
    }

    public void RemoveMovementInput() {
        RemoveComponent(GameComponentsLookup.MovementInput);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMovementInput;

    public static Entitas.IMatcher<GameEntity> MovementInput {
        get {
            if (_matcherMovementInput == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MovementInput);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMovementInput = matcher;
            }

            return _matcherMovementInput;
        }
    }
}
