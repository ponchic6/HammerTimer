//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Grabbing.ProduceProgress produceProgress { get { return (Code.Gameplay.Grabbing.ProduceProgress)GetComponent(GameComponentsLookup.ProduceProgress); } }
    public bool hasProduceProgress { get { return HasComponent(GameComponentsLookup.ProduceProgress); } }

    public void AddProduceProgress(float newValue) {
        var index = GameComponentsLookup.ProduceProgress;
        var component = (Code.Gameplay.Grabbing.ProduceProgress)CreateComponent(index, typeof(Code.Gameplay.Grabbing.ProduceProgress));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceProduceProgress(float newValue) {
        var index = GameComponentsLookup.ProduceProgress;
        var component = (Code.Gameplay.Grabbing.ProduceProgress)CreateComponent(index, typeof(Code.Gameplay.Grabbing.ProduceProgress));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveProduceProgress() {
        RemoveComponent(GameComponentsLookup.ProduceProgress);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherProduceProgress;

    public static Entitas.IMatcher<GameEntity> ProduceProgress {
        get {
            if (_matcherProduceProgress == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ProduceProgress);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherProduceProgress = matcher;
            }

            return _matcherProduceProgress;
        }
    }
}
